# Site
repository: sproogen/resume-theme
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: Alexander Zaitsev
title: Architect, software engineer (mostly C++/Rust), a little bit DevOps
email: zamazan4ik@tut.by
website: https://zamazan4ik.github.io

# Dark Mode (true/false/never)
darkmode: true

# Social links
twitter_username: zamazan4ik
github_username:  zamazan4ik
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
facebook_username: zamazan4ik
# flickr_username: jekyll
# instagram_username: zamazan4ik
linkedin_username: zamazan4ik
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
# additional_links:
# - title: itsgoingto.be
#   icon: fas fa-globe
#   url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
about_title: Here should be a title
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  Hi, my name is Alex and I'm yet another architect. I am mostly interested in designing and developing any kind of robust modern application (like cloud-native apps).

content:
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: TCP-Soft
        link: https://tcp-soft.com
        sub_title: Architect
        caption: February 2022 - now
        description: |
          - Redesign highly-available ElasticSearch cluster across several data centers. On this project I did some reverse-engineering of existing solutions, identifying stakeholders, collecting functional and non-functional requirements, evaluating data centers availability optimizing ElasticSearch configuration in several dimensions (redundancy like replicas count, performance characteristics like optimal shard size, and using proper Java GC, scalability)
          - Help with preparing documentation templates for the architecture department in the company, evaluating existing practices, and improving them
          - Eliminating production data usage in different test environments across the company: tweak human and tools workflows, introduce data generation techniques
          - Tools: Confluence, Jira, Draw.io/plantuml
      - layout: left
        title: N-able (SolarWinds)
        link: https://n-able.com (https://solarwinds.com)
        sub_title: Software engineer (mostly C++)
        caption: February 2018 - February 2022
        description: |
          - Work on Cloud-To-Cloud product - a backup solution for Office365. Here I've got the following experience:
          - Get huge experience with Microsoft Graph API, Exchange API, SharePoint Online REST API. Work in touch with Microsoft Graph API team for several workarounds
          - Being a part of an internal C++ committee. As a committee member, I've worked on internal C++ guidelines, adopted modern C++ features for the code base, investigated C++ Standard upgrades, helped with choosing dependency manager, etc.
          - Being a speaker on internal knowledge-sharing events (we call it TechCafe)
          - Push using Clang-Format for our sources. Compared clang-format to code formatting tools (like uncrustify), review several code styles, preparing clang-format builds and proper internal documentation
          - Investigate using fuzzers (AFL, Libfuzeer-based, self-hosted Oss-Fuzz) for some parts of our code
          - Push forward continuous performance testing
          - Push forward using Google Sanitizers on CI as a part of an internal workflow
          - Help with building our solution on Windows platform with Clang - fixing Clang-specific stuff on Windows
          - Port our solution to ARM architecture (AWS Graviton CPUs)
          - Design from the scratch storage format for SharePoint feature
          - Implement several Proof-of-Concept for features like OneDrive restore
          - Debug on production several really difficult problems, related to C++ memory issues and undefined behaviours
          - Work with a support team as an on-duty developer
          - Work in a geographically dispersed team
          - Trying to push modern DevOps practices
          - Evaluate provided ARD from the architects and provide the feedback as a developer representative
          - Participate in regular releases
          - Lead threat modeling activities in our team: prepare all required artifacts, facilitate threat modeling sessions, work with an architecture team and security experts on the threat model stabilization, help the architecture team with threat modeling tooling evaluation
          - Perform end-to-end log solution design (identifying and engaging stakeholders, gathering functional and quality requirements, comparing different ready and semi-ready 3rd party solutions, implementing proof of concepts, COGS estimation, presenting results, and much more
      - layout: left
        title: CIB Software
        sub_title: Software engineer (C++)
        caption: June 2016 - February 2018
        description: | # this will include new lines to allow paragraphs
          - I've worked on several projects: CIB PDF Brewer (Windows desktop application that works with printers), CIB IPL (proprietary OpenCV-and-ImageMagick-based library with different classic computer vision algorithms), CIB OCR (proprietary Tesseract-based OCR system with several enhancements), CIB PDF (proprietary library for work with PDF files). Here I've got the following experience:
          - Being the only developer on IPL and OCR, so manage the full lifecycle: several discussions with business and support, planning, make design and implementation, testing (manual and with autotests), release
          - Do research & development (R&D) for different image-related algorithms like Mixed-Raster Compression (MRC), real-time edge detection, PDF reverse engineering, etc.
          - Integrate the libraries with other products
          - Help with long and short-term design for the libraries
          - Port the libraries to CMake from a custom build system
          - Port the libraries to Android x64
          - Integrate the libraries with an Android application with SWIG and JNI
          - Integrate an application into MS Office (Word, Excel, PowerPoint) application as an addin
          - Use C++ <-> C# interop for MS Office Addins

  - title: Conferences
    layout: text
    content: |
      - A program committee member in CoreHard and C++ Russia, do talks review for CppNow, CppCon, CoreHard, C++ Russia conferences
      - A semi-regular speaker (and a regular attendee:) in a different conferences
      - CoreHard 2017 Spring "Boost.Algorithm" (ru)([video](https://www.youtube.com/watch?v=Xp2uo7pfHsM), [pdf](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/Boost.Algorithm/Boost%20Algorithm.pdf), [odp](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/Boost.Algorithm/Boost%20Algorithm.odp))
      - CoreHard 2017 Autumn "CppNow 2017 trip report" (ru)([video](https://www.youtube.com/watch?v=lr-QkC5885c), [pdf](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/CppNow2017trip_report/CppNow%20trip%20report.pdf), [odp](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/CppNow2017trip_report/CppNow%20trip%20report.odp))
      - CoreHard 2017 Autumn lightning talk "Fuzzy search" (ru)([video](https://www.youtube.com/watch?v=t1JYim0OQP8))
      - C++ User Group 2017 Nizhniy Novgorod "Compare different C++ compilers optimizations" (ru)([pdf](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/CppNizhniyNovg2017/Compiler%20benchmark.pdf), [odp](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/CppNizhniyNovg2017/Compiler%20benchmark.odp))
      - LVEE 2018 Winter "Comparing of OCR tools" (ru)([pdf](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/lvee2018winter/LVEE2018.pdf), [odp](https://github.com/ZaMaZaN4iK/ConfsANDProps/blob/master/Conferences/lvee2018winter/LVEE2018.odp))
      - Corehard 2018 Spring "Profiling programs for C++" (ru)([video](https://www.youtube.com/watch?v=V1SN_IuUh7s))
      - LVEE 2018 Summer "Automatic bug search in C/C++" (ru)([video](https://www.youtube.com/watch?v=PiVgqEyBqT8))
      - CoreHard 2018 Autumn "What cannot be optimized by C++ compilers" (ru)([video](https://www.youtube.com/watch?v=dAmhGElNUX0))
      - CoreHard Zoom-based talk about a culture of coding in the C++ community
      - Was an invited expert on C++ Russia 2020, moderated several talks

  - title: Publications
    layout: text
    content: |
      - Several C++ proposals ([Add more std::hash specializations](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1406r0.html), [Changing attack vector of the constexpr_vector](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0639r0.html), bunch of proposals about constexprifying C++ containers, Numerics TS)
      - My talks from the LVEE conferences were published in an international digest
      - Habr publications ([Algorithms for palindrom search](https://habr.com/ru/post/276195/), [Conan: package manager for C++ (ru)](https://habr.com/ru/post/342982/))
  
  - title: Pet project (YourGame)
    layout: text
    content: |
      - Highlight all possible stakeholders and work with them (that's not only me, fortunately :)
      - Work with use scenarios
      - Work with stakeholders' concerns and resolve conflicts between concerns in the architecture
      - Work with functional and non-functional (quality) requirements
      - Evaluate and adjust the architecture
      - Prepare different models (text and boxes, UML diagrams). We use draw.io
      - Implement and adjust the ARD template (based on Arc42 template and "Viewpoints and Perspectives" book)
      - Maintain ARD (AsciiDoc-based)
      - Evaluate different public clouds from different perspectives: provided services, pricing, toolkit compatibility
      - Implement proof of concepts (e.g. ECS-based architecture evaluation)
      - Design full application lifecycle: transformation requirements into the architecture, development, testing, deploy and operation
      - Design CI process (CD coming soon)
      - Choose technology stack (programming languages, main frameworks/game engines, deploy tooling, etc.)
      - Use the following principles and design patterns: Twelve-factor, Event-Driven, Client-Server, Domain-Driven Design, ECS-based approach

  - title: Open Source activities
    layout: text
    content: |
      I love all kinds of open source projects, so I'm trying to do something cool and/or useful :)
      - In the past was an active Russian WG21 member (C++ standardization committee): writing and reviewing proposals
      - Conan (Bincrafters): packaging several libraries for Conan package manager - packed a lot of different libraries (especially core image libraries). Was a Conan advocate (now I am a language-specific dependency manager advocate :)
      - Boost: added several utility algorithms to Boost.Algorithm library. Work on fuzzy search algorithms
      - Clang: work on static analysis tools (Clang Tidy, Clang Static Analyzer, my analyzer as a diploma project)
      - PRLib: a library with several image preprocessing algorithms: [link](https://github.com/ZaMaZaN4iK/prlib)
      - gImageReader: implemented better PDF support, small fixes
      - Maintained rust-serverless project: we maintain Docker image for using AWS Lambda with Rust
      - Set of Rust Teloxide-based Telegram based for several chats with large communities
      - A lot of small fixes in several libraries and applications (see my GitHub account history)

  - title: Programming interests
    layout: text
    content: |
      I had and have different interests in different computer science areas. Some years ago I was crazy about image pre and post-OCR processing. I've read a lot of articles and even implemented PRLIB. But this area is too specific (at least I think so) and later I switched to another area: compilers and static analysis. Mostly I was (and a little am) interested in compiler optimizations and static analysis problems (you can check my diploma project).

      Now for me is interesting to design and develop modern cloud-based highly-scalable high-performance (throughput and latency) systems.

  - title: Certificates
    layout: list
    content:
      - layout: left
        title: Unity
        caption: 2021
        sub_title: Unity Essentials and Unity Junior pathways

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Belarusian State Technological University
        caption: 2015 - 2019
        sub_title: BSc Computer Science
      - layout: left
        title: Brest Regional Lyceum
        caption: 2013 - 2015
        sub_title: Physics and Math

  - title: A Little More About Me
    layout: text
    content: | # this will include new lines to allow paragraphs
      Alongside my interests in software engineering some of my other interests and hobbies are:
      - Gaming (especially RPG and slashers)
      - Anime

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
